import React from 'react';
import Code from '../components/Code';

const slides = [
  () => (
    <section>
      <h2>store and effects.</h2>
      <p className="change-colors">implementing flux.</p>
    </section>
  ),
  () => (
    <section>
      <img style={{ width: 80, marginBottom: 10 }} src={require('./images/redux-logo.png')} />
      <h3>redux.</h3>
      <p>a predictable state container for javaScript apps.</p>
    </section>
  ),
  () => (
    <section>
      <h2>based in <span className="change-colors">3 principles</span>.</h2>
    </section>
  ),
  () => (
    <section>
      <h4 className="bullet">single source of thruth.</h4>
      <h4 className="bullet">state is read-only.</h4>
      <h4 className="bullet">changes are made with pure functions.</h4>
    </section>
  ),
  () => (
    <section>
      <h2>data flow in <span className="change-colors">4 steps</span>.</h2>
    </section>
  ),
  () => (
    <section>
      <h4 className="bullet">dispatch an action.</h4>
      <h4 className="bullet">store calls the reducer function.</h4>
      <h4 className="bullet">root reducer combines results.</h4>
      <h4 className="bullet">store saves state and calls subscribers.</h4>
    </section>
  ),
  () => (
    <section>
      <Code html={require('!!prismjs?lang=jsx!./code/redux.js')} />
    </section>
  ),
  () => (
    <section>
      <h4>what if the action creator is <span className="change-colors">asynchronous</span>?</h4>
    </section>
  ),
  () => (
    <section>
      <Code html={require('!!prismjs?lang=jsx!./code/redux-thunk.js')} />
    </section>
  ),
  () => (
    <section>
      <h4 className="bullet">this is <span className="change-colors">not</span> easy</h4>
      <h4 className="bullet">did you said alternatives?</h4>
      <h4 className="bullet">meet redux-saga <span className="bullet">ðŸ˜±</span></h4>
    </section>
  ),
  () => (
    <section>
      <Code html={require('!!prismjs?lang=jsx!./code/redux-saga.js')} />
    </section>
  ),
  () => (
    <section>
      <h1>ðŸ’€</h1>
    </section>
  ),
  () => (
    <section>
      <h3><span className="change-colors">integration</span> with react.</h3>
    </section>
  ),
  () => (
    <section>
      <h4 className="bullet">components need to access the store</h4>
      <h4 className="bullet">context is the feature to use</h4>
      <h4 className="bullet">it is annoying to use</h4>
      <h4 className="bullet">but you can use <span className="change-colors">hoc</span></h4>
    </section>
  ),
  () => (
    <section>
      <table>
        <thead>
          <tr>
            <th></th>
            <th scope="col">presentational components</th>
            <th scope="col">container components</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <th scope="row" style={{textAlign: 'right'}}>purpose</th>
            <td>how things look</td>
            <td>how things work</td>
          </tr>
          <tr>
            <th scope="row" style={{textAlign: 'right'}}>aware of redux</th>
            <td>no</td>
            <td>yes</td>
          </tr>
          <tr>
            <th scope="row" style={{textAlign: 'right'}}>to read data</th>
            <td>read data from props</td>
            <td>subscribe to redux state</td>
          </tr>
          <tr>
            <th scope="row" style={{textAlign: 'right'}}>to change data</th>
            <td>invoke callbacks from props</td>
            <td>dispatch redux actions</td>
          </tr>
          <tr>
            <th scope="row" style={{textAlign: 'right'}}>are written</th>
            <td>by hand</td>
            <td>usually generated by react redux</td>
          </tr>
        </tbody>
      </table>
    </section>
  ),
  () => (
    <section>
      <Code html={require('!!prismjs?lang=jsx!./code/provider.js')} />
    </section>
  ),
  () => (
    <section>
      <Code html={require('!!prismjs?lang=jsx!./code/react-redux.js')} />
    </section>
  )
];

export default slides.reduce((result, slide, idx) => (
  { ...result, [`store-and-effects-${idx}`]: slide }
), {});
